% Function to construct connectivities in previously generated data. The
% connectivity is generated by replacing  a defined amount of every signal
% by the signal of another channel using a lag and a matrix defining the
% connectivities. The calculation is performed over all timeframes
% sequentially. If lag is set to zero, signals are replaced by the previous
% channel.
%
% [data,lag] = lab_create_modeldata_connectivity(data,matrix,lag)
%
% written by F. Hatz 2014

function [data,header] = lab_create_modeldata_connectivity(data,header,matrix,lag,K)

disp('Add connectivity by matrix, lag and K')
    
if isempty(matrix) | size(matrix,1) ~= size(matrix,2) | size(matrix,1) ~= size(data,1)
    return
end

if ~exist('K','var') | isempty(K)
    K = 1;
end
if lag >= 0
    m1 = matrix * K;
    m1(m1<0) = 0;
    m2 = zeros(size(matrix));
    for i = 1:size(matrix,2)
        m1(i,i) = 0;
        tmp = sum(m1(i,:));
        if tmp > 1
            m1(i,:) = m1(i,:) / tmp;
        else
            m2(i,i) = 1 - tmp;
        end
    end
    data = (m1 * data(:,1:end-lag)) + (m2 * data(:,lag+1:end));
    clearvars m1 m2
else
    firstcell = matrix(1);
    matrix = tril(matrix);
    [x,y,lagT] = find(matrix);
    for i = 1:size(x,1)
        if lagT(i) > 0
            data(x(i),1+lagT(i):end) = data(x(i),1+lagT(i):end) + K*(data(y(i),1:end-lagT)-data(x(i),1+lagT(i):end));
        elseif lagT < 0
            data(x(i),1:end-lagT) = data(x(i),1:end-lagT) + K*(data(y(i),1+lagT(i):end) - data(x(i),1:end-lagT));
        else
            data(x(i),:) = data(x(i),:) + K*(data(y(i),:)-data(x(i),:));
        end
    end
    lag = max(abs(lagT));
    if firstcell > 0
        data(1,1+firstcell:end) = data(1,1:end-firstcell);
    elseif firstcell < 0
        data(1,1:end-firstcell) = data(1,1+firstcell:end);
    end
    lag = max(lag,firstcell);
    data = data(:,1+lag:end);
end

header.numtimeframes = size(data,2);
header.connect.matrix = matrix;
header.connect.lag = lag;

end
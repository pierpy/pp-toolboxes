% create colormaps
%
% cmap = lab_create_cmap(color)
%
% predefined   color = bluered / bluered2 / red / blue / green / braun
%              color = [x x x] (rgb color-code)
%
% written by F. Hatz 2013

function cmap = lab_create_cmap(color,cstart,clength)

if ~exist('color','var') | isempty(color)
    color = 'bluered';
end
if ~exist('cstart','var') | isempty(cstart)
    cstart = [1 1 1];
end
if ~exist('clength','var') | clength < 2
    clength = 64; % (clength-1)
else
    clength = round(clength);
end

if ischar(color) & ~isnan(str2double(color))
    color = str2num(color); %#ok<ST2NM>
end
if ischar(color) & length(color) == 1
    if strcmp(color,'y')
        color = [1 1 0];
    elseif strcmp(color,'m')
        color = [1 0 1];
    elseif strcmp(color,'c')
        color = [0 1 1];
    elseif strcmp(color,'r')
        color = [1 0 0];
    elseif strcmp(color,'g')
        color = [0 1 0];
    elseif strcmp(color,'b')
        color = [0 0 1];
    elseif strcmp(color,'k')
        color = [0 0 0];
    end
end
if isnumeric(color)
    if size(color,2) == 3
        cend = color;
    else
        disp('no valid color information, take red')
        cend = [1,0,0];
    end
    if cstart(1,1) ~= cend(1,1)
        cmap(:,1) = cstart(1,1):-(cstart(1,1)-cend(1,1))/(clength-1):cend(1,1);
    else
        cmap(:,1) = repmat(cstart(1,1),clength,1);
    end
    if cstart(1,2) ~= cend(1,2)
        cmap(:,2) = cstart(1,2):-(cstart(1,2)-cend(1,2))/(clength-1):cend(1,2);
    else
        cmap(:,2) = repmat(cstart(1,2),clength,1);
    end
    if cstart(1,3) ~= cend(1,3)
        cmap(:,3) = cstart(1,3):-(cstart(1,3)-cend(1,3))/(clength-1):cend(1,3);
    else
        cmap(:,3) = repmat(cstart(1,3),clength,1);
    end
elseif cstart(1,1) == 0.941176474094391
    if strcmp(color,'bluered')
        cmap = [0,0,0.562500000000000;0,0,0.625000000000000;0,0,0.687500000000000; ...
            0,0,0.750000000000000;0,0,0.812500000000000;0,0,0.875000000000000; ...
            0,0,0.937500000000000;0,0,1;0,0.0769230797886848,1;0,0.153846159577370,1; ...
            0,0.230769231915474,1;0,0.307692319154739,1;0,0.384615391492844,1; ...
            0,0.461538463830948,1;0,0.538461565971375,1;0,0.615384638309479,1; ...
            0,0.692307710647583,1;0,0.769230782985687,1;0,0.846153855323792,1; ...
            0,0.923076927661896,1;0,1,1;0.0855614989995956,0.994652390480042,0.994652390480042; ...
            0.171122997999191,0.989304840564728,0.989304840564728; ...
            0.256684482097626,0.983957231044769,0.983957231044769; ...
            0.342245995998383,0.978609621524811,0.978609621524811; ...
            0.427807480096817,0.973262012004852,0.973262012004852; ...
            0.513368964195252,0.967914462089539,0.967914462089539; ...
            0.598930478096008,0.962566852569580,0.962566852569580; ...
            0.684491991996765,0.957219243049622,0.957219243049622; ...
            0.770053505897522,0.951871633529663,0.951871633529663; ...
            0.855614960193634,0.946524083614349,0.946524083614349; ...
            0.941176474094391,0.941176474094391,0.941176474094391; ...
            0.948529422283173,0.948529422283173,0.823529422283173; ...
            0.955882370471954,0.955882370471954,0.705882370471954; ...
            0.963235318660736,0.963235318660736,0.588235318660736; ...
            0.970588207244873,0.970588207244873,0.470588237047195; ...
            0.977941155433655,0.977941155433655,0.352941185235977; ...
            0.985294103622437,0.985294103622437,0.235294118523598; ...
            0.992647051811218,0.992647051811218,0.117647059261799; ...
            1,1,0;1,0.937500000000000,0;1,0.875000000000000,0;1,0.812500000000000,0; ...
            1,0.750000000000000,0;1,0.687500000000000,0;1,0.625000000000000,0; ...
            1,0.562500000000000,0;1,0.500000000000000,0;1,0.437500000000000,0; ...
            1,0.375000000000000,0;1,0.312500000000000,0;1,0.250000000000000,0; ...
            1,0.187500000000000,0;1,0.125000000000000,0;1,0.0625000000000000,0; ...
            1,0,0;0.937500000000000,0,0;0.875000000000000,0,0;0.812500000000000,0,0;0.750000000000000,0,0; ...
            0.687500000000000,0,0;0.625000000000000,0,0;0.562500000000000,0,0;0.500000000000000,0,0;];
    else
        if length(color) > 1 & strcmp(color(1),'i')
            color = color(2:end);
            doinverse = true;
        else
            doinverse = false;
        end
        try %#ok<TRYNC>
            eval(['cmap = ' color '(' num2str(clength) ');']);
            if doinverse == true
                cmap = flipud(cmap); %#ok<NODEF>
            end
        end
    end
else
    if strcmp(color,'bluered')
        cmap = [0,0,0.562500000000000;0,0,0.625000000000000;0,0,0.687500000000000; ...
            0,0,0.750000000000000;0,0,0.812500000000000;0,0,0.875000000000000; ...
            0,0,0.937500000000000;0,0,1;0,0.0769230797886848,1;0,0.153846159577370,1; ...
            0,0.230769231915474,1;0,0.307692319154739,1;0,0.384615391492844,1; ...
            0,0.461538463830948,1;0,0.538461565971375,1;0,0.615384638309479,1; ...
            0,0.692307710647583,1;0,0.769230782985687,1;0,0.846153855323792,1; ...
            0,0.923076927661896,1;0,1,1;0.0909090936183929,1,1;0.181818187236786,1,1; ...
            0.272727280855179,1,1;0.363636374473572,1,1;0.454545468091965,1,1; ...
            0.545454561710358,1,1;0.636363625526428,1,1;0.727272748947144,1,1; ...
            0.818181812763214,1,1;0.909090936183929,1,1;1,1,1;1,1,1;1,1,0.857142865657806; ...
            1,1,0.714285731315613;1,1,0.571428596973419;1,1,0.428571432828903; ...
            1,1,0.285714298486710;1,1,0.142857149243355;1,1,0;1,0.937500000000000,0; ...
            1,0.875000000000000,0;1,0.812500000000000,0;1,0.750000000000000,0; ...
            1,0.687500000000000,0;1,0.625000000000000,0;1,0.562500000000000,0; ...
            1,0.500000000000000,0;1,0.437500000000000,0;1,0.375000000000000,0; ...
            1,0.312500000000000,0;1,0.250000000000000,0;1,0.187500000000000,0; ...
            1,0.125000000000000,0;1,0.0625000000000000,0;1,0,0;0.937500000000000,0,0; ...
            0.875000000000000,0,0;0.812500000000000,0,0;0.750000000000000,0,0; ...
            0.687500000000000,0,0;0.625000000000000,0,0;0.562500000000000,0,0; ...
            0.500000000000000,0,0];
    else
        if length(color) > 1 & strcmp(color(1),'i')
            color = color(2:end);
            doinverse = true;
        else
            doinverse = false;
        end
        try %#ok<TRYNC>
            eval(['cmap = ' color '(' num2str(clength) ');']);
            if doinverse == true
                cmap = flipud(cmap); %#ok<NODEF>
            end
        end
    end
end
if ~exist('cmap','var')
    disp('no valid color information, take red')
    cend = [1,0,0];
    tmp = cstart(1,1):-(cstart(1,1)-cend(1,1))/(clength-1):cend(1,1);
    if ~isempty(tmp)
        cmap(:,1) = tmp;
    else
        cmap(:,1) = repmat(cstart(1,2),clength,1);
    end
    tmp = cstart(1,2):-(cstart(1,2)-cend(1,2))/(clength-1):cend(1,2);
    if ~isempty(tmp)
        cmap(:,2) = tmp;
    else
        cmap(:,2) = repmat(cstart(1,3),clength,1);
    end
    tmp = cstart(1,3):-(cstart(1,3)-cend(1,3))/(clength-1):cend(1,3);
    if ~isempty(tmp)
        cmap(:,3) = tmp;
    else
        cmap(:,3) = repmat(cstart(1,1),clength,1);
    end
end
if size(cmap,1) ~= clength
    lengthin=size(cmap,1);
    [N,D]=rat(clength/size(cmap,1),0.0001);
    lengthout=floor(lengthin*N/D);
    lengthin=floor(lengthout*D/N);
    clearvars tmp
    tmp(:,1)=resample(cmap(1:lengthin,1)',N,D);
    tmp(:,2)=resample(cmap(1:lengthin,2)',N,D);
    tmp(:,3)=resample(cmap(1:lengthin,3)',N,D);
    cmap = tmp;
end